{"ast":null,"code":"var _jsxFileName = \"/Users/harryndugba/Desktop/stagelink/src/Main/carousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useTransition, animated, config } from 'react-spring';\nimport Alisster from './images/alisster.png';\nimport AliFight from './images/bgimg.jpg';\nimport AliWin from './images/hero.jpg';\nimport BlackGuy from './images/imagery.jpg';\nimport LoganFight from './images/LoganFight.jpeg';\nimport Pacquiao from './images/Pacquiao.jpeg';\nimport ConorVsKhabib from './images/ConorVsKhabib.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst slides = [{\n  id: 0,\n  url: AliFight\n}, {\n  id: 1,\n  url: BlackGuy\n}, {\n  id: 2,\n  url: AliWin\n}, {\n  id: 3,\n  url: Alisster\n}, {\n  id: 4,\n  url: LoganFight\n}, {\n  id: 5,\n  url: Pacquiao\n}, {\n  id: 6,\n  url: ConorVsKhabib\n}];\n\nconst Slidehow = () => {\n  _s();\n\n  const [index, set] = useState(0);\n  const transitions = useTransition(slides[index], item => item.id, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    },\n    config: config.molasses\n  });\n  slides = slides.sort(() => Math.random() - 0.5);\n  useEffect(() => void setInterval(() => set(state => (state + 1) % 7), 4000), []);\n  return transitions === null || transitions === void 0 ? void 0 : transitions.map(({\n    item,\n    props,\n    key\n  }) => /*#__PURE__*/_jsxDEV(animated.div, {\n    class: \"bg bkg\",\n    style: { ...props,\n      backgroundImage: \"url(\" + item.url + \")\"\n    }\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Slidehow, \"q1J2FBfcVTikOHfTHr3gShnvAn0=\", false, function () {\n  return [useTransition];\n});\n\n_c = Slidehow;\nexport default Slidehow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slidehow\");","map":{"version":3,"sources":["/Users/harryndugba/Desktop/stagelink/src/Main/carousel.js"],"names":["React","useState","useEffect","useTransition","animated","config","Alisster","AliFight","AliWin","BlackGuy","LoganFight","Pacquiao","ConorVsKhabib","slides","id","url","Slidehow","index","set","transitions","item","from","opacity","enter","leave","molasses","sort","Math","random","setInterval","state","map","props","key","backgroundImage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,MAAlC,QAAgD,cAAhD;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,GAAG,EAAER;AAAd,CADa,EAEb;AAAEO,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,GAAG,EAAEN;AAAd,CAFa,EAGb;AAAEK,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,GAAG,EAAEP;AAAd,CAHa,EAIb;AAAEM,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,GAAG,EAAET;AAAd,CAJa,EAKb;AAAEQ,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,GAAG,EAAEL;AAAd,CALa,EAMb;AAAEI,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,GAAG,EAAEJ;AAAd,CANa,EAOb;AAAEG,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,GAAG,EAAEH;AAAd,CAPa,CAAf;;AAUA,MAAMI,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,GAAR,IAAejB,QAAQ,CAAC,CAAD,CAA7B;AACA,QAAMkB,WAAW,GAAGhB,aAAa,CAACU,MAAM,CAACI,KAAD,CAAP,EAAgBG,IAAI,IAAIA,IAAI,CAACN,EAA7B,EAAiC;AAChEO,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD0D;AAEhEC,IAAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KAFyD;AAGhEE,IAAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAHyD;AAIhEjB,IAAAA,MAAM,EAAEA,MAAM,CAACoB;AAJiD,GAAjC,CAAjC;AAMAZ,EAAAA,MAAM,GAAGA,MAAM,CAACa,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC,CAAT;AACA1B,EAAAA,SAAS,CAAC,MAAM,KAAK2B,WAAW,CAAC,MAAMX,GAAG,CAACY,KAAK,IAAI,CAACA,KAAK,GAAG,CAAT,IAAc,CAAxB,CAAV,EAAsC,IAAtC,CAAvB,EAAoE,EAApE,CAAT;AACA,SAAOX,WAAP,aAAOA,WAAP,uBAAOA,WAAW,CAAEY,GAAb,CAAiB,CAAC;AAAEX,IAAAA,IAAF;AAAQY,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,kBACtB,QAAC,QAAD,CAAU,GAAV;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,KAAK,EAAE,EAAE,GAAGD,KAAL;AAAYE,MAAAA,eAAe,EAAE,SAASd,IAAI,CAACL,GAAd,GAAoB;AAAjD;AAHT,KACOkB,GADP;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD,CAjBD;;GAAMjB,Q;UAEgBb,a;;;KAFhBa,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useTransition, animated, config } from 'react-spring'\nimport Alisster from './images/alisster.png'\nimport AliFight from './images/bgimg.jpg'\nimport AliWin from './images/hero.jpg'\nimport BlackGuy from './images/imagery.jpg'\nimport LoganFight from './images/LoganFight.jpeg'\nimport Pacquiao from './images/Pacquiao.jpeg'\nimport ConorVsKhabib from './images/ConorVsKhabib.jpeg'\n\nconst slides = [\n  { id: 0, url: AliFight },\n  { id: 1, url: BlackGuy },\n  { id: 2, url: AliWin },\n  { id: 3, url: Alisster },\n  { id: 4, url: LoganFight },\n  { id: 5, url: Pacquiao },\n  { id: 6, url: ConorVsKhabib },\n]\n\nconst Slidehow = () => {\n  const [index, set] = useState(0)\n  const transitions = useTransition(slides[index], item => item.id, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    config: config.molasses,\n  })\n  slides = slides.sort(() => Math.random() - 0.5)\n  useEffect(() => void setInterval(() => set(state => (state + 1) % 7), 4000), [])\n  return transitions?.map(({ item, props, key }) => (\n    <animated.div\n      key={key}\n      class=\"bg bkg\"\n      style={{ ...props, backgroundImage: \"url(\" + item.url + \")\" }}\n    />\n  ))\n}\n\nexport default Slidehow\n"]},"metadata":{},"sourceType":"module"}